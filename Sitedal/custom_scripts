Github: https://github.com/shenril/Sitadel

INSTALLATION: 
- git clone https://github.com/shenril/Sitadel.git
- cd Sitadel
- pip3 install 
- if got error for scrapy then install => pip3 install scrapy 
- python sitadel.py --help

Usage: sitadel.py [-h] [-r {0,1,2}] [-ua USER_AGENT] [--redirect]
           [--no-redirect] [-t TIMEOUT] [-c COOKIE] [-p PROXY]
           [-f FINGERPRINT [MODULE ...]] [-a ATTACK [MODULE ...]]
           [--config CONFIG] [-v] [--version]
           TARGET_URL

Custom Scripts:
- python3 sitadel.py https://mysmartsa.com //basic script for initiating the attack
- python3 sitadel.py https://mysmartsa.com -r {0,1,2} // Decide the risk level you want Sitadel to run (some attacks won't be executed)
- python3 sitadel.py https://mysmartsa.com [-c| --cookie]  //Allows to specify the cookie to send with the attack requests
- python3 sitadel.py https://mysmartsa.com [-a|--attack bruteforce, injection, vulns, other] //Specify the attack modules to activate to scan the website
- python3 sitadel.py https://mysmartsa.com [-f|--fingerprint header framework server system waf lang] 
   /**
   header = Inspect the headers exchanged with the target
   framework = Try to guess if the target uses a backend framework
   server = Try to guess the server technology used by the target
   system  = Try to guess the Operation System used by the target
   waf = Try to guess if the target uses a Web Application Firewall 
   lang = Try to guess the server language used by the target
   **/
- python3 sitadel.py https://mysmartsa.com [-t|--timeout 10] Specify the timeout for the HTTP requests to the website

